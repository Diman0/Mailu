name: CI-buildx

on:
  # Triggers the workflow on release or push to master
  release:
    types:
      - released
  push:
    branches:
      - 'master'

# Global environment variables
env:
  DOCKER_ORG: "leolivier"
  DOCKER_PREFIX: "mailu-"
  PINNED_MAILU_VERSION: "1.9-multiarch"
  MAILU_TAG: ${{ github.ref_name }}

jobs:    
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Compute Tag
        run: echo MAILU_TAG=$(echo ${GITHUB_REF_NAME:local} | iconv -t ascii//TRANSLIT | sed -r s/[^a-zA-Z0-9\.]+/-/g | sed -r s/^-+\|-+$//g | tr A-Z a-z) >> $GITHUB_ENV

      - name: Check Trigger
        run: echo "TRIGGERED BY " ${{ github.event_name }} " ON BRANCH/TAG " ${{ github.ref_name }}

      - name: Checkout
        uses: actions/checkout@v3

      - name: Create version file
        shell: bash
        run: |
          VERSION_FILE="Source: https://github.com/$GITHUB_REPOSITORY Branch: $GITHUB_REF_NAME Tag: $PINNED_MAILU_VERSION Hash: $GITHUB_SHA"
          echo "VERSION_FILE=$VERSION_FILE"
          echo "VERSION_FILE=$VERSION_FILE" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub on release
        uses: docker/login-action@v2
        if: ${{ github.event_name == 'release' }}
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GHCR if not release
        uses: docker/login-action@v2
        if: ${{ github.event_name != 'release' }}
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # needed for gha cache?
      - uses: crazy-max/ghaction-github-runtime@v2
      # depending on login above, willpussh to GHCR for testing or to Docker hub for releasing
      - name: Build and push
        uses: docker/bake-action@v2.1.0
        with:
          files: tests/build.hcl
          push: 'true'
          set: |
            "*.args.VERSION=${{ env.VERSION_FILE }}"
            "*.args.pinned_version=${{ env.VERSION_FILE }}"
            "*.cache-from=type=gha"
            "*.cache-to=type=gha,mode=max"
